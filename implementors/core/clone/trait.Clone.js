(function() {var implementors = {};
implementors["rdkafka"] = [{"text":"impl&lt;'a&gt; Clone for ResourceSpecifier&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for DefaultClientContext","synthetic":false,"types":[]},{"text":"impl Clone for RDKafkaLogLevel","synthetic":false,"types":[]},{"text":"impl Clone for ClientConfig","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Rebalance&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for DefaultConsumerContext","synthetic":false,"types":[]},{"text":"impl Clone for CommitMode","synthetic":false,"types":[]},{"text":"impl Clone for RDKafkaError","synthetic":false,"types":[]},{"text":"impl Clone for KafkaError","synthetic":false,"types":[]},{"text":"impl Clone for Timestamp","synthetic":false,"types":[]},{"text":"impl Clone for OwnedHeaders","synthetic":false,"types":[]},{"text":"impl Clone for OwnedMessage","synthetic":false,"types":[]},{"text":"impl&lt;C&gt; Clone for BaseProducer&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: ProducerContext,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;C:&nbsp;Clone + ClientContext + 'static&gt; Clone for FutureProducerContext&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl&lt;C, R&gt; Clone for FutureProducer&lt;C, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: ClientContext + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for DefaultProducerContext","synthetic":false,"types":[]},{"text":"impl Clone for Offset","synthetic":false,"types":[]},{"text":"impl Clone for TopicPartitionList","synthetic":false,"types":[]},{"text":"impl Clone for Timeout","synthetic":false,"types":[]}];
implementors["rdkafka_sys"] = [{"text":"impl&lt;T&gt; Clone for __BindgenUnionField&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_type_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_timestamp_type_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_topic_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_conf_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_topic_conf_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_queue_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_op_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_topic_result_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_consumer_group_metadata_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_error_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_headers_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_group_result_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_resp_err_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_err_desc","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_topic_partition_list_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_vtype_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_msg_status_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_conf_res_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_cert_type_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_cert_enc_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_metadata_topic","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_group_member_info","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_group_list","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_thread_type_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_admin_op_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_AdminOptions_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_NewTopic_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_DeleteTopic_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_NewPartitions_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_ConfigSource_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_ConfigEntry_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_ResourceType_t","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_ConfigResource_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_DeleteRecords_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_DeleteGroup_s","synthetic":false,"types":[]},{"text":"impl Clone for rd_kafka_DeleteConsumerGroupOffsets_s","synthetic":false,"types":[]},{"text":"impl Clone for RDKafkaErrorCode","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()