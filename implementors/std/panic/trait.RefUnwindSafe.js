(function() {var implementors = {};
implementors["rdkafka"] = [{"text":"impl&lt;C&gt; !RefUnwindSafe for AdminClient&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdminOptions","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for NewTopic&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TopicReplication&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for NewPartitions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ResourceSpecifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnedResourceSpecifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigEntry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigResource","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AlterConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultClientContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NativeClient","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; RefUnwindSafe for Client&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RDKafkaLogLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NativeClientConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientConfig","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; RefUnwindSafe for BaseConsumer&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; RefUnwindSafe for Iter&lt;'a, C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; RefUnwindSafe for PartitionQueue&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; RefUnwindSafe for StreamConsumerContext&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, C, R&nbsp;=&nbsp;TokioRuntime&gt; !RefUnwindSafe for MessageStream&lt;'a, C, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C&nbsp;=&nbsp;DefaultConsumerContext, R&nbsp;=&nbsp;TokioRuntime&gt; !RefUnwindSafe for StreamConsumer&lt;C, R&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Rebalance&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultConsumerContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommitMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConsumerGroupMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RDKafkaError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KafkaError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupMemberInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timestamp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BorrowedHeaders","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BorrowedMessage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnedHeaders","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OwnedMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetadataBroker","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetadataPartition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetadataTopic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl&lt;'a, K:&nbsp;?Sized, P:&nbsp;?Sized, D&gt; RefUnwindSafe for BaseRecord&lt;'a, K, P, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; RefUnwindSafe for BaseProducer&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; !RefUnwindSafe for ThreadedProducer&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K:&nbsp;?Sized, P:&nbsp;?Sized&gt; RefUnwindSafe for FutureRecord&lt;'a, K, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; RefUnwindSafe for FutureProducerContext&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&nbsp;=&nbsp;DefaultClientContext, R&nbsp;=&nbsp;TokioRuntime&gt; !RefUnwindSafe for FutureProducer&lt;C, R&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for DeliveryFuture","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultProducerContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Statistics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Broker","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Window","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TopicPartition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Topic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Partition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConsumerGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExactlyOnceSemantics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TopicPartitionListElem&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TopicPartitionList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timeout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NaiveRuntime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokioRuntime","synthetic":true,"types":[]}];
implementors["rdkafka_sys"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for __BindgenUnionField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_type_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_timestamp_type_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_topic_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_conf_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_topic_conf_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_queue_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_op_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_topic_result_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_consumer_group_metadata_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_error_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_headers_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_resp_err_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_err_desc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_topic_partition_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_topic_partition_list_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_vtype_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_vu_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_vu_s__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_vu_s__bindgen_ty_1__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_vu_s__bindgen_ty_1__bindgen_ty_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_message_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_msg_status_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_conf_res_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_cert_type_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_cert_enc_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_metadata_broker","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_metadata_partition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_metadata_topic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_metadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_group_member_info","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_group_info","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_group_list","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_thread_type_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_admin_op_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_AdminOptions_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_NewTopic_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_DeleteTopic_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_NewPartitions_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_ConfigSource_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_ConfigEntry_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_ResourceType_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for rd_kafka_ConfigResource_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RDKafkaErrorCode","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()